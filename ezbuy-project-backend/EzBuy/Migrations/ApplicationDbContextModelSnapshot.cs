// <auto-generated />
using System;
using EzBuy.AppContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EzBuy.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("root_schema")
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("EzBuy.Models.Tenant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Database")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Domain")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("varchar(70)");

                    b.Property<string>("Port")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)");

                    b.Property<int?>("RuleId")
                        .HasColumnType("int");

                    b.Property<string>("Server")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("varchar(70)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupId")
                        .IsUnique();

                    b.HasIndex("RuleId")
                        .IsUnique();

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Tenant", "root_schema");
                });

            modelBuilder.Entity("EzBuy.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<int>("RuleId")
                        .HasColumnType("int");

                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("User", "root_schema");
                });

            modelBuilder.Entity("ezBuy.Abstractions.Models.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("RuleId")
                        .HasColumnType("int");

                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RuleId")
                        .IsUnique();

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Group", "root_schema");
                });

            modelBuilder.Entity("ezBuy.Abstractions.Models.Rule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("Responsibility")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Rule", "root_schema");
                });

            modelBuilder.Entity("EzBuy.Models.Tenant", b =>
                {
                    b.HasOne("ezBuy.Abstractions.Models.Group", "Group")
                        .WithOne("Tenant")
                        .HasForeignKey("EzBuy.Models.Tenant", "GroupId");

                    b.HasOne("ezBuy.Abstractions.Models.Rule", "Rule")
                        .WithOne("Tenant")
                        .HasForeignKey("EzBuy.Models.Tenant", "RuleId");

                    b.HasOne("EzBuy.Models.User", "User")
                        .WithOne("Tenant")
                        .HasForeignKey("EzBuy.Models.Tenant", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Rule");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ezBuy.Abstractions.Models.Group", b =>
                {
                    b.HasOne("ezBuy.Abstractions.Models.Rule", "Rule")
                        .WithOne("Group")
                        .HasForeignKey("ezBuy.Abstractions.Models.Group", "RuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EzBuy.Models.User", "User")
                        .WithOne("Group")
                        .HasForeignKey("ezBuy.Abstractions.Models.Group", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rule");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ezBuy.Abstractions.Models.Rule", b =>
                {
                    b.HasOne("EzBuy.Models.User", "User")
                        .WithOne("Rule")
                        .HasForeignKey("ezBuy.Abstractions.Models.Rule", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EzBuy.Models.User", b =>
                {
                    b.Navigation("Group")
                        .IsRequired();

                    b.Navigation("Rule")
                        .IsRequired();

                    b.Navigation("Tenant")
                        .IsRequired();
                });

            modelBuilder.Entity("ezBuy.Abstractions.Models.Group", b =>
                {
                    b.Navigation("Tenant")
                        .IsRequired();
                });

            modelBuilder.Entity("ezBuy.Abstractions.Models.Rule", b =>
                {
                    b.Navigation("Group")
                        .IsRequired();

                    b.Navigation("Tenant")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
